<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        ">
    <!--
    ********************************************************************************
    *       Shiro 权限验证
    ********************************************************************************
    -->

    <!--  rememberMe配置 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe" />
        <property name="httpOnly" value="true" />
        <!-- 默认记住7天（单位：秒） -->
        <property name="maxAge" value="604800" />
    </bean>

    <!--  rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
        <property name="cookie" ref="rememberMeCookie" />
    </bean>

    <!--  定义授权缓存管理器，储存密码错误次数 -->
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!--引用ehcache-bean.xml中的cacheManagerFactory加载ehcache配置-->
        <property name="cacheManager" ref="cacheManagerFactory"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器,表单的属性名使用默认的username,password,rememberMe -->
    <bean id="formAuthenticationFilter" class="com.webster.jsm.core.security.filter.MyFormAuthenticationFilter"/>

    <!-- 密码错误5次以上锁定，凭证匹配器 -->
    <bean id="retryLimitCredentialsMatcher"
          class="com.webster.jsm.core.security.filter.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="shiroCacheManager" />
        <property name="hashAlgorithmName" value="md5" />
        <property name="hashIterations" value="3" />
        <property name="storedCredentialsHexEncoded" value="true" />
    </bean>

    <!-- 自定义一个Realm，指定Shiro验证用户登录的类为自定义的MyRealm.java-->
    <bean id="myRealm" class="com.webster.jsm.core.security.realm.MyRealm">
        <!--增加一个自定义验证,验证多次尝试密码-->
        <property name="credentialsMatcher" ref="retryLimitCredentialsMatcher"/>
    </bean>

    <!-- 根据Realm，创建实例securityManager-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm" />
        <property name="rememberMeManager" ref="rememberMeManager" />
    </bean>

    <!-- web过滤器shiroFilter，id必须与web.xml中过滤器名字一样-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">

        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接 &ndash;&gt;-->
        <property name="loginUrl" value="/login"/>
        <!-- 登录成功后要跳转的连接 -->
        <property name="successUrl" value="/admin/index"/>
        <!-- 用户访问未对其授权的资源时,所显示的连接 -->
        <property name="unauthorizedUrl" value="/error/msg"/>
        <!-- 表单登录过滤，必须设置好上面的loginUrl和下面的地址过滤/login=authc-->
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <!-- 过滤url请求，详见http://blog.csdn.net/jadyer/article/details/12172839-->
            <value>
                /static/** = anon
                /test/** = anon
                <!--/userfiles/** = anon-->
                <!--/error/** = anon-->
                /login = authc
                /logout = logout
                ${sys.adminPath}/user/** = authc
                ${sys.adminPath}/** = user
            </value>
        </property>
    </bean>

    <!--  保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--  使用注解必须添加， AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>



</beans>