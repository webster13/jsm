<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--
    ********************************************************************************
    *      spring 基础配置
    ********************************************************************************
    -->
    <!-- 加载配置文件-->
    <context:property-placeholder location="classpath:app.properties" ignore-resource-not-found="true" ignore-unresolvable="true"/>

    <context:component-scan base-package="com.webster.jsm">

    <!-- 扫描注解,排除@Controller-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>

    <!-- View 视图解析器 -->
    <import resource="classpath:spring/view-bean.xml"/>
    <!-- Log4j 日志-->
    <import resource="classpath:spring/log4j-bean.xml"/>
    <!-- Druid 连接池-->
    <import resource="classpath:spring/druid-bean.xml"/>
    <!-- Mybatis 数据库dao-->
    <import resource="classpath:spring/mybatis-bean.xml"/>
    <!-- EHCache 缓存-->
    <import resource="classpath:spring/ehcache-bean.xml"/>
    <!-- Shiro 用户认证-->
    <import resource="classpath:spring/shiro-bean.xml"/>

    <!-- 配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <!--注意：此处的数据源要与sqlSessionFactory中的dataSource相同-->
    </bean>

    <!-- 配置事务的注解驱动，扫描@Transactional注解的类定义事务  -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>





</beans>